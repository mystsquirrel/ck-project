@model  Tuple<ck_project.lead, ck_project.address>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @if (ViewBag.m != null)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                toastr.success('@ViewBag.m');
            });
        </script>
    }
}


@using (Html.BeginForm())
{


                    @Html.AntiForgeryToken()

                    <h4> Lead </h4>




                    <h5>All the fields with star are required</h5>

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class='col-xs-4'>
                        <div class="form-group">
                            <label class='control-label'>Project Name*</label>
                            @Html.EditorFor(Tuple => Tuple.Item1.project_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(Tuple => Tuple.Item1.project_name, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class='col-xs-4'>
                        <div class="form-group">
                            <label class='control-label'>CLass Name*</label>
                            @Html.DropDownList("class_number", (List<SelectListItem>)ViewBag.Class_Info, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(Tuple => Tuple.Item1.class_number, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class='col-xs-4'>
                        <div class="form-group">
                            <label class='control-label'>Project Type*</label>
                            @Html.DropDownList("project_type_number", (IEnumerable<SelectListItem>)ViewBag.ProjectType_Info, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(Tuple => Tuple.Item1.project_type_number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class='col-xs-4'>
                        <div class="form-group">
                            <label class='control-label'>Project Source*</label>
                            @Html.DropDownList("source_number", (IEnumerable<SelectListItem>)ViewBag.Source_Info, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(Tuple => Tuple.Item1.source_number, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class='col-xs-4'>
                        <div class="form-group">
                            <label class='control-label'>Designer Name*</label>
                            @Html.DropDownList("emp_number", (IEnumerable<SelectListItem>)ViewBag.Emp_Info, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(Tuple => Tuple.Item1.emp_number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class='col-xs-4'>
                        <div class="form-group">
                            <label class='control-label'>Branch Name*</label>
                            @Html.DropDownList("branch_number", (IEnumerable<SelectListItem>)ViewBag.Branch_Info, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(Tuple => Tuple.Item1.branch_number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class='col-xs-4'>
                        <div class="form-group">
                            <label class='control-label'>Delivery Status*</label>
                            @Html.DropDownList("delivery_status_number", (IEnumerable<SelectListItem>)ViewBag.DeliveryStatus_Info, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(Tuple => Tuple.Item1.delivery_status_number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class='col-xs-4 '>
                        <div class="form-group">
                            <label class="control-label" for="name">Phone Number</label>
                            @Html.EditorFor(tuple => tuple.Item1.phone_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(tuple => tuple.Item1.phone_number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class='col-xs-4 '>
                        <div class="form-group">
                            <label class="control-label" for="name">Phone Number2</label>
                            @Html.EditorFor(tuple => tuple.Item1.second_phone_number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(tuple => tuple.Item1.second_phone_number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class='col-xs-4 '>
                        <div class="form-group">
                            <label class="control-label" for="name"> Email Address</label>
                            @Html.EditorFor(tuple => tuple.Item1.email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(tuple => tuple.Item1.email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class='col-xs-4'>
                        <div class="form-group">
                            <label class='control-label'>Tax Exempt? *</label>
                            @Html.EditorFor(Tuple => Tuple.Item1.tax_exempt)
                            @Html.ValidationMessageFor(Tuple => Tuple.Item1.tax_exempt, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class='col-xs-4'>
                        <div class="form-group">
                            <label class='control-label'>In City? *</label>
                            @Html.EditorFor(Tuple => Tuple.Item1.in_city)
                            @Html.ValidationMessageFor(Tuple => Tuple.Item1.in_city, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>


                    <div class="panel-group" id="accordion">
                        <div class="panel panel-default">
                            <h3 class="panel-heading">
                                <a data-toggle="collapse" data-parent="#accordion" href="#collapseR" style="color:#8B0000">
                                    Address
                                </a>
                            </h3>

                            <div id="collapseR" class="panel-collapse collapse">
                                <div class="panel-body">


                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        <hr />
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                                        <div class='col-xs-4'>
                                            <div class="form-group">
                                                <label class="control-label" for="name"> Jobsite Address*</label>
                                                @Html.EditorFor(tuple => tuple.Item2.address1, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(tuple => tuple.Item2.address1, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class='col-xs-4'>
                                            <div class="form-group">
                                                <label class="control-label" for="name"> Jobsite City*</label>
                                                @Html.EditorFor(tuple => tuple.Item2.city, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(tuple => tuple.Item2.city, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class='col-xs-4 '>
                                            <div class="form-group">
                                                <label class="control-label" for="name"> Jobsite State*</label>
                                                @Html.DropDownList("state", (IEnumerable<SelectListItem>)ViewBag.Sstate, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(tuple => tuple.Item2.state, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class='col-xs-4 '>
                                            <div class="form-group">
                                                <label class="control-label" for="name"> Jobsite County*</label>
                                                @Html.EditorFor(tuple => tuple.Item2.county, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(tuple => tuple.Item2.county, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class='col-xs-4 '>
                                            <div class="form-group">
                                                <label class="control-label" for="name"> Jobsite Zipcode*</label>
                                                @Html.EditorFor(tuple => tuple.Item2.zipcode, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(tuple => tuple.Item2.zipcode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>




                                    </div>

                                </div>

                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-1 col-md-10">
                                @Html.ActionLink("Back to List", "ListLead")
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;



                                <input type="submit" value="Create" class="btn btn-default" id="passwordInfo" /> &nbsp;

                            </div>
                        </div>
                    </div>

                    }


